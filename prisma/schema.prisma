// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Product {
  id            String          @id @default(uuid())
  model         String          @unique
  title         String
  price         Float
  description   String?
  images        String[]
  Category      Category        @relation(fields: [categoryId], references: [id])
  categoryId    String          @map("category_id")
  ProductMedia  ProductMedia[]
  ProductReview ProductReview[]

  @@index(model)
}

model Category {
  id          String    @id @default(uuid())
  title       String
  title_en    String    @unique
  description String
  Product     Product[]
}

model ProductMedia {
  id        String  @id @default(uuid())
  title     String
  subtitle  String
  media_url String
  style     Style   @default(IMAGE_BOTTOM)
  Product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")
}

model ProductReview {
  id         String   @id @default(uuid())
  rating     Int
  comment    String
  image      String
  author     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Product    Product  @relation(fields: [productId], references: [id])
  productId  String   @map("product_id")
}

enum Style {
  VIDEO
  IMAGE_ONLY
  IMAGE_LEFT
  IMAGE_RIGHT
  IMAGE_BOTTOM
}
