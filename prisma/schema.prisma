// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Product {
  id          String          @id @default(uuid())
  model       String          @unique
  title       String
  price       Float?
  description String?
  images      String[]
  features    Json?
  specs       Json?
  Category    Category?       @relation(fields: [category_id], references: [id], onDelete: SetNull)
  category_id String?
  media       ProductMedia[]
  reviews     ProductReview[]

  @@index(model)
}

model Category {
  id          String    @id @default(uuid())
  title       String
  title_en    String?   @unique
  description String?
  products    Product[]
}

model ProductMedia {
  id         String  @id @default(uuid())
  title      String
  subtitle   String?
  media_url  String  @default("")
  style      Style   @default(image_bottom)
  Product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id String
}

model ProductReview {
  id         String   @id @default(uuid())
  rating     Int
  comment    String?
  image      String   @default("")
  author     String   @default("áº¨n danh")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id String
}

enum Style {
  video
  image_only
  image_left
  image_right
  image_bottom
}
